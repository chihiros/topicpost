openapi: "3.0.3"
info:
  title: TopicPost API仕様書
  version: "1.0"
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://www.topicpost.net
    description: 本番環境
  - url: https://stg.topicpost.net
    description: 検証環境

tags:
  - name: User
    description: ユーザー情報に関するAPI
  - name: Profile
    description: プロフィール情報に関するAPI

paths:
  /users:
    post:
      tags: [User]
      security:
        - bearerAuth: []
      operationId: users-post
      summary: ユーザーを作成する
      description: |-
        ユーザーを作成するAPIです
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserRequest"
      responses:
        # 2xx系のレスポンス
        200:
          description: ユーザー作成成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserResponse"

        # 4xx系のレスポンス
        400:
          description: リクエストが不正
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

        # 5xx系のレスポンス

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
          description: エラーメッセージ
          example: リクエストが不正です

    UserRequest:
      type: object
      properties:
        uid:
          type: string
          format: uuid
          description: Supabaseが発行したUIDを入れる
          example: 123e4567-e89b-12d3-a456-426614174000

    UserResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: ユーザーID
        name:
          type: string
          description: ユーザー名
        email:
          type: string
          description: メールアドレス
        password:
          type: string
          description: パスワード
        created_at:
          type: string
          format: date-time
          description: 作成日時
        updated_at:
          type: string
          format: date-time
          description: 更新日時
